# shellcheck shell=dash

release()(
    local x_cmd_pkg_version="${1:-"v0.1.1"}"
    local root_path="$(x wsroot)"
    x:info "run cmd -> x cd $root_path"
    x cd "$root_path"

    x:info "clone git@github.com:x-cmd-pkg/release.git"
    git clone git@github.com:x-cmd-pkg/release || returns

    x:info "Release on github."
    (
        x cp -f release/dist/"${x_cmd_pkg_version}".tar.gz   ./dist/"${x_cmd_pkg_version}".tar.gz   || return
        x cp -f release/dist/"${x_cmd_pkg_version}_hash.txt" ./dist/"${x_cmd_pkg_version}_hash.txt" || return
        git add "$(x wsroot)/dist"
        git commit -m "update pkg bundle package by github.com/x-cmd-pkg/release"
        git push git@github.com:x-cmd/pkg main
        x:info "release github"
    ) || return
    x:info "Release on oss."
    local oss_host="res@world.hub.x-cmd.com"
    local oss_home="/home/res"
    local oss_pkg="${oss_home}/res/data/x-cmd/pkg/dist"
    (
        x mkdirp ./pkg.tmp/
        x cp  "release/dist/${x_cmd_pkg_version}.tar.gz" ./pkg.tmp/
        x cp  "release/dist/${x_cmd_pkg_version}_hash.txt" ./pkg.tmp/
        scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
            -r ./pkg.tmp "${oss_host}:${oss_pkg}/"
        ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
            "$oss_host" "mv ${oss_pkg}/pkg.tmp/${x_cmd_pkg_version}.tar.gz ${oss_pkg}/ && mv ${oss_pkg}/pkg.tmp/${x_cmd_pkg_version}_hash.txt ${oss_pkg}/ && rm -rf  ${oss_pkg}/pkg.tmp"
        ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
            "$oss_host"  'cd $HOME/res && . $HOME/.x-cmd.root/X && x ws upload_pkg'
    ) || return
    x:info "Finish"
)

release "$___X_CMD_PKG_RELEASE_VERSION"
